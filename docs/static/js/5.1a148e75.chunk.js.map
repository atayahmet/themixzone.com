{"version":3,"sources":["pages/genre/DetailPage.tsx","hocs/mix/DetailHoc.tsx"],"names":["GenreDetail","_super","props","_this","call","this","state","currentGenre","__WEBPACK_IMPORTED_MODULE_0_tslib__","prototype","componentDidUpdate","prevProps","console","log","Object","__WEBPACK_IMPORTED_MODULE_12_lodash__","match","params","getData","componentDidMount","name","__WEBPACK_IMPORTED_MODULE_10__music_services_gaService__","pageView","render","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_4__layouts_Sidebar__","__WEBPACK_IMPORTED_MODULE_5_semantic_ui_react__","style","height","className","as","mixes","__WEBPACK_IMPORTED_MODULE_7__music_components_MixBox__","data","slice","cb","slug","genres","find","__WEBPACK_IMPORTED_MODULE_9__music_models_mix__","getMixesByGenre","id","then","res","docs","map","__WEBPACK_IMPORTED_MODULE_8__music_utils__","setState","catch","error","GenreDetailPage","__WEBPACK_IMPORTED_MODULE_3_react_router_dom__","__WEBPACK_IMPORTED_MODULE_2_react_redux__","__WEBPACK_IMPORTED_MODULE_11__music_extensions_entity_collection__","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_6__music_hocs_mix_DetailHoc__","WrappedComponent","class_1"],"mappings":"gOAwBAA,UAAA,SAAAC,GAKE,SAAAD,EAAYE,GAAZ,IAAAC,EACEF,EAAAG,KAAAC,KAAMH,IAAMG,YALPF,EAAAG,OACLC,mBA0CJ,OA5C0BC,EAAA,EAAAR,EAAAC,GASjBD,EAAAS,UAAAC,mBAAP,SAA0BC,GACxBC,QAAQC,IAAI,aAAcR,KAAKH,OACzBY,OAAAC,EAAA,QAAAD,CAAQT,KAAKH,MAAMc,MAAMC,OAAQN,EAAUK,MAAMC,SACrDZ,KAAKa,WAIFlB,EAAAS,UAAAU,kBAAP,WACEd,KAAKa,QAAQ,SAACE,GAAS,OAAAC,EAAA,EAAUC,SAAS,iBAAiBF,MAGtDpB,EAAAS,UAAAc,OAAP,WACE,OACEC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACC,EAAA,EAAgB,KACfD,EAAA,cAACE,EAAA,GAAQC,OAAQC,OAAQ,SAAUC,UAAU,uBAC3CL,EAAA,cAACE,EAAA,GAAOI,GAAG,MAAMzB,KAAKC,MAAMC,aAAaa,MACxCf,KAAKC,MAAMyB,OACVP,EAAA,cAACQ,EAAA,GAAOC,KAAU5B,KAAKC,MAAMyB,MAAKG,cAQtClC,EAAAS,UAAAS,QAAR,SAAgBiB,GAAhB,IAAAhC,EAAAE,UAAgB,IAAA8B,MAAA,WAAmC,cACzC,IAAAC,EAAA/B,KAAAH,MAAAc,MAAAC,OAAAmB,KACF7B,EAAeF,KAAKH,MAAMmC,OAAOC,KAAKF,EAAM,QAElDG,EAAA,EAAIC,gBAAgBjC,EAAakC,IAAIC,KAAK,SAACC,GACzC,IAAMZ,EAAQY,EAAIC,KAAKC,IAAIC,EAAA,GAC3B3C,EAAK4C,UAAUhB,MAAKA,EAAExB,aAAYA,GAAG,WAAM,OAAA4B,EAAG5B,EAAaa,UAC1D4B,MAAMpC,QAAQqC,QAErBjD,EA5CA,CAA0BwB,EAAA,YAoDpB0B,EAAkBpC,OAAAqC,EAAA,EAAArC,CAAWA,OAAAsC,EAAA,EAAAtC,CANX,SAACR,GACvB,OACE+B,OAAQ,IAAIgB,EAAA,EAAiB/C,EAAM+B,OAAOJ,QAIXnB,CAAyBd,IAE7CsD,EAAA,QAAAxC,OAAAyC,EAAA,GAAaL,0CC5Eb,SAAsBM,GACnC,gBAAAvD,GACE,SAAAwD,EAAYvD,GAAZ,IAAAC,EACEF,EAAAG,KAAAC,KAAMH,IAAMG,YACZF,EAAKG,WAQT,OAXqBE,EAAA,EAAAiD,EAAAxD,GAMZwD,EAAAhD,UAAAc,OAAP,WACE,OACEC,EAAA,cAACgC,EAAgBhD,EAAA,KAAKH,KAAKH,MAAWG,KAAKC,SAGjDmD,EAXA,CAAqBjC,EAAA","file":"static/js/5.1a148e75.chunk.js","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport SidebarComponent from '../../layouts/Sidebar';\nimport { Segment, Header } from 'semantic-ui-react';\nimport MixDetailHoc from '@music/hocs/mix/DetailHoc';\nimport MixBox from '@music/components/MixBox';\nimport { firestore } from 'firebase';\nimport { moveIdToDoc } from '@music/utils';\nimport { IGenre, IState, IMix, IRouteProps } from '@music/interfaces';\nimport mix from '@music/models/mix';\nimport gaService from '@music/_services/gaService';\nimport EntityCollection from '@music/extensions/entity-collection';\nimport { isEqual } from 'lodash';\n\ninterface IGenreState {\n  currentGenre: IGenre;\n  mixes?: IMix[];\n}\n\ninterface ISeriesDetailProps extends IRouteProps {\n  genres: EntityCollection;\n}\n\nclass GenreDetail extends React.Component<ISeriesDetailProps, IGenreState> {\n  public state: Readonly<IGenreState> = {\n    currentGenre: {} as IGenre,\n  };\n\n  constructor(props: ISeriesDetailProps) {\n    super(props);\n  }\n\n  public componentDidUpdate(prevProps: ISeriesDetailProps) {\n    console.log('this.props', this.props);\n    if (! isEqual(this.props.match.params, prevProps.match.params)) {\n      this.getData();\n    }\n  }\n\n  public componentDidMount() {\n    this.getData((name) => gaService.pageView(`Genre Detail: ${name}`));\n  }\n\n  public render() {\n    return (\n      <>\n        <SidebarComponent>\n          <Segment style={{height: '600px'}} className=\"toptracks-container\">\n            <Header as='h1'>{this.state.currentGenre.name}</Header>\n            {this.state.mixes &&\n              <MixBox data={[...this.state.mixes]} />\n            }\n          </Segment>\n        </SidebarComponent>\n      </>\n    );\n  }\n\n  private getData(cb: (title: string) => any = () => null) {\n    const { slug } = this.props.match.params;\n    const currentGenre = this.props.genres.find(slug, 'slug') as IGenre;\n\n    mix.getMixesByGenre(currentGenre.id).then((res: firestore.QuerySnapshot) => {\n      const mixes = res.docs.map(moveIdToDoc);\n      this.setState({mixes, currentGenre}, () => cb(currentGenre.name));\n    }).catch(console.error);\n  }\n}\n\nconst mapStateToProps = (state: IState) => {\n  return {\n    genres: new EntityCollection(state.genres.data),\n  }\n};\n\nconst GenreDetailPage = withRouter(connect(mapStateToProps)(GenreDetail) as any);\n\nexport default MixDetailHoc(GenreDetailPage);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/genre/DetailPage.tsx","import * as React from 'react';\n\nexport default function MixDetailHoc(WrappedComponent: any) {\n  return class extends React.Component<any, any> {\n    constructor(props: any) {\n      super(props);\n      this.state = {};\n    }\n\n    public render() {\n      return (\n        <WrappedComponent {...this.props} {...this.state} />\n      );\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/mix/DetailHoc.tsx"],"sourceRoot":""}