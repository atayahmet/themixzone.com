{"version":3,"sources":["pages/mix/DetailPage.tsx","hocs/mix/DetailHoc.tsx","components/stateless/PlayButtonVar2.tsx"],"names":["MixDetail","_super","props","_this","call","this","state","currentSeries","mix","__WEBPACK_IMPORTED_MODULE_0_tslib__","Object","defineProperty","prototype","__WEBPACK_IMPORTED_MODULE_9__music_extensions_entity_collection__","container","componentDidMount","_a","match","params","slug","count","series","find","setState","__WEBPACK_IMPORTED_MODULE_13__music_services_gaService__","pageView","name","componentDidUpdate","where","seriesId","id","parseInt","first","__WEBPACK_IMPORTED_MODULE_5__music_utils__","prepareMix","prepared","render","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_7__layouts_Sidebar__","__WEBPACK_IMPORTED_MODULE_3_semantic_ui_react__","style","backgroundImage","cover","height","className","as","description","__WEBPACK_IMPORTED_MODULE_12__music_components_stateless_PlayButtonVar2__","play","pause","current","player","cues","__WEBPACK_IMPORTED_MODULE_10__music_components_stateless_TrackListBody__","isPlaying","playing","currentTrack","MixDetailPage","__WEBPACK_IMPORTED_MODULE_4_react_router_dom__","__WEBPACK_IMPORTED_MODULE_2_react_redux__","mixContainer","data","slice","keys","length","undefined","dispatch","setMainMix","__WEBPACK_IMPORTED_MODULE_11__music_actions_player__","addToContainer","cb","__WEBPACK_IMPORTED_MODULE_6__music_actions_mix__","__WEBPACK_IMPORTED_MODULE_8__music_hocs_mix_DetailHoc__","__webpack_exports__","WrappedComponent","class_1","__WEBPACK_IMPORTED_MODULE_0_react__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_1_semantic_ui_react__","n","__WEBPACK_IMPORTED_MODULE_2__hocs_PlayButtonHoc__","__WEBPACK_IMPORTED_MODULE_3__music_hocs_QuickPlayHoc__","setPlayerState","isLoading","isSame","inline","active","size","circular","icon","onClick"],"mappings":"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","file":"static/js/0.bf7310c6.chunk.js","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Segment, Header, Container } from 'semantic-ui-react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { has, isMobile } from '@music/utils';\nimport { prepareMix } from '@music/actions/mix';\nimport SidebarComponent from '../../layouts/Sidebar';\nimport MixDetailHoc from '@music/hocs/mix/DetailHoc';\nimport EntityCollection from '@music/extensions/entity-collection';\nimport TrackListBody from '@music/components/stateless/TrackListBody';\nimport { IState, IKeyValueObject, ISeries, IMix, ITrackCue, MainMixType } from '@music/interfaces';\nimport { setMainMix } from '@music/actions/player';\nimport { IQuickPlayHoc } from '@music/hocs/QuickPlayHoc';\nimport PlayButton from '@music/components/stateless/PlayButtonVar2';\nimport gaService from '@music/_services/gaService';\n\ntype MixDetailFullProps = IMixDetailProps & RouteComponentProps & IQuickPlayHoc;\n\ninterface IMixDetailProps {\n  player: MainMixType;\n  series: EntityCollection;\n  container: IKeyValueObject[];\n  currentTrack: ITrackCue|undefined;\n  prepareMix: (mix: IMix, addToContainer: boolean, cb: (mix: IMix) => any) => any;\n  setMainMix: (mix: MainMixType) => any;\n}\n\ninterface IMixDetailState {\n  currentSeries: ISeries|null|undefined;\n  mix: IMix\n}\n\nclass MixDetail extends React.Component<MixDetailFullProps, IMixDetailState> {\n  public state: Readonly<IMixDetailState> = {\n    currentSeries: null,\n    mix: {} as IMix\n  };\n\n  constructor(props: MixDetailFullProps) {\n    super(props);\n  }\n\n  get container(): EntityCollection {\n    return new EntityCollection(this.props.container);\n  }\n\n  get mix(): IMix|null {\n    return this.state.mix;\n  }\n\n  public componentDidMount() {\n    const { slug, count } = this.props.match.params as IKeyValueObject;\n    const currentSeries = this.props.series.find(slug, 'slug') as ISeries;\n    this.setState({ currentSeries }, () => gaService.pageView(`Mix Detail: ${currentSeries.name} #${count}`));\n  }\n\n  public componentDidUpdate() {\n    const { count } = this.props.match.params as IKeyValueObject;\n    const series = this.state.currentSeries || {} as IMix;\n    const mix = this.container.where({seriesId: series.id, count: parseInt(count)}).first() as IMix;\n\n    if (mix && !has('cues.0.track', this.state.mix)) {\n      this.props.prepareMix({...mix}, true, (prepared) => {\n        this.setState({mix: prepared});\n      });\n    }\n  }\n\n  public render() {\n    return !this.state.currentSeries  ? null : (\n      <>\n        <SidebarComponent>\n          {(!!this.mix && this.mix.count) &&\n          <Segment style={{backgroundImage: `url(${this.mix.cover || '/pictures/cover-bg.jpeg'})`, height: isMobile() ? '100vh' : '500px'}} className=\"wide-cover\">\n            <>\n              <br />\n              <Header as=\"h1\">{this.state.currentSeries.name} #{this.mix.count}</Header>\n              <Header as=\"h3\">{this.mix.description}</Header>\n              <PlayButton\n                mix={this.mix}\n                {...this.props}\n                play={this.props.play}\n                pause={this.props.pause}\n                current={this.props.player}\n                series={this.props.series.first()}\n              />\n            </>\n          </Segment>\n          }\n          <Container>\n            {(!!this.mix && this.mix.cues) &&\n              <TrackListBody\n                cues={this.mix.cues}\n                isPlaying={this.props.player.playing}\n                currentTrack={this.props.currentTrack}\n              />\n            }\n          </Container>\n        </SidebarComponent>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: CallableFunction) => {\n  return {\n    setMainMix: (mix: MainMixType) => dispatch(setMainMix({...mix})),\n    prepareMix: (mix: IMix, addToContainer: boolean, cb: (mix: IMix) => any) => dispatch(prepareMix(mix, addToContainer, cb)),\n  }\n};\n\nconst mapStateToProps = (state: IState) => {\n  return {\n    player: state.player,\n    container: [...state.mixContainer.data],\n    series: new EntityCollection(state.series.data),\n    currentTrack: Object.keys(state.currentTrack).length > 0 ? {...state.currentTrack} : undefined,\n  }\n};\n\nconst MixDetailPage = withRouter(connect(mapStateToProps, mapDispatchToProps)(MixDetailHoc(MixDetail)) as any);\n\nexport default MixDetailPage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/mix/DetailPage.tsx","import * as React from 'react';\n\nexport default function MixDetailHoc(WrappedComponent: any) {\n  return class extends React.Component<any, any> {\n    constructor(props: any) {\n      super(props);\n      this.state = {};\n    }\n\n    public render() {\n      return (\n        <WrappedComponent {...this.props} {...this.state} />\n      );\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/mix/DetailHoc.tsx","import * as React from 'react';\nimport { IMix, MainMixType, ISeries } from '../../interfaces';\nimport { Loader, Button } from 'semantic-ui-react';\nimport PlayButtonHoc from '../../hocs/PlayButtonHoc';\nimport QuickPlayHoc from '@music/hocs/QuickPlayHoc';\n\ninterface IPlayButtonProps {\n  setPlayerState: (mix: IMix) => any;\n  isLoading: boolean;\n  isSame: boolean;\n  mix: IMix;\n  current: MainMixType;\n  series: ISeries;\n}\n\nfunction PlayButton({setPlayerState, isLoading, isSame, mix, series}: IPlayButtonProps) {\n  return (\n    <>\n    {isLoading && <Loader inline active size='mini' />}\n    {!isLoading &&\n      <Button\n        circular\n        size=\"big\"\n        icon={(isSame ? 'pause' : 'play')}\n        onClick={() => setPlayerState(mix)}\n      />\n    }\n    </>\n  )\n}\n\nexport default QuickPlayHoc(PlayButtonHoc(PlayButton));\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/stateless/PlayButtonVar2.tsx"],"sourceRoot":""}