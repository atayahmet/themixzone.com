{"version":3,"sources":["pages/genre/ListPage.tsx","hocs/mix/ListHoc.tsx"],"names":["GenreList","_super","props","call","this","__WEBPACK_IMPORTED_MODULE_0_tslib__","prototype","componentDidMount","__WEBPACK_IMPORTED_MODULE_9__music_services_gaService__","pageView","render","_this","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_7_react_sizeme__","_a","size","__WEBPACK_IMPORTED_MODULE_4__layouts_Sidebar__","__WEBPACK_IMPORTED_MODULE_5_semantic_ui_react__","style","height","className","Group","genres","filter","g","list","map","genre","fluid","width","centered","key","id","link","onClick","go","src","image","Content","Header","name","Description","history","push","__WEBPACK_IMPORTED_MODULE_8__music_models__","newInstance","url","GenreListPage","Object","__WEBPACK_IMPORTED_MODULE_2_react_redux__","state","data","__WEBPACK_IMPORTED_MODULE_3_react_router_dom__","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_6__music_hocs_mix_ListHoc__","WrappedComponent","class_1"],"mappings":"8MAWAA,EAAA,SAAAC,GAEE,SAAAD,EAAYE,UACVD,EAAAE,KAAAC,KAAMF,IAAME,KAsChB,OAzCwBC,EAAA,EAAAL,EAAAC,GAMfD,EAAAM,UAAAC,kBAAP,WACEC,EAAA,EAAUC,SAAS,eAGdT,EAAAM,UAAAI,OAAP,eAAAC,EAAAP,KACE,OACEQ,EAAA,cAAAA,EAAA,cACAA,EAAA,cAACC,EAAA,OAAM,KACJ,SAACC,OAAEC,EAAAD,EAAAC,KAAW,OACbH,EAAA,cAACI,EAAA,EAAgB,KACfJ,EAAA,cAACK,EAAA,GAAQC,OAAQC,OAAQ,QAASC,UAAU,uBAC5CR,EAAA,cAACK,EAAA,EAAKI,MAAK,KACRV,EAAKT,MAAMoB,OAAOC,OAAO,SAACC,GAAc,OAAAA,EAAEC,OAAMC,IAAI,SAACC,GAAkB,OACtEf,EAAA,cAACK,EAAA,GAAKW,SAAUb,EAAKc,OAAS,GAAK,KAAMC,YAAaf,EAAKc,OAAS,GAAK,KAAME,IAAKJ,EAAMK,GAAIC,MAAI,GAChGrB,EAAA,cAACK,EAAA,GAAMiB,QAASvB,EAAKwB,GAAGR,GAAQS,IAAKT,EAAMU,QAC3CzB,EAAA,cAACK,EAAA,EAAKqB,SAAQJ,QAASvB,EAAKwB,GAAGR,IAC7Bf,EAAA,cAACK,EAAA,EAAKsB,OAAM,KAAEZ,EAAMa,MACpB5B,EAAA,cAACK,EAAA,EAAKwB,YAAW,KAAEd,EAAMa,iBAanCxC,EAAAM,UAAA6B,GAAR,SAAWR,GAAX,IAAAhB,EAAAP,KACE,OAAO,WACLO,EAAKT,MAAMwC,QAAQC,KAAKC,EAAA,EAAWC,YAAYlB,GAAOmB,SAG5D9C,EAzCA,CAAwBY,EAAA,WAiDlBmC,EAAgBC,OAAAC,EAAA,EAAAD,CANE,SAACE,GACvB,OACE5B,OAAQ4B,EAAM5B,OAAO6B,OAIHH,CAAyBA,OAAAI,EAAA,EAAAJ,CAAWhD,IAE3CqD,EAAA,QAAAL,OAAAM,EAAA,GAAWP,0CC5DX,SAAoBQ,GACjC,gBAAAtD,GACE,SAAAuD,EAAYtD,GAAZ,IAAAS,EACEV,EAAAE,KAAAC,KAAMF,IAAME,YACZO,EAAKuC,WAYT,OAfqB7C,EAAA,EAAAmD,EAAAvD,GAMNuD,EAAAlD,UAAAC,kBAAb,+FAIOiD,EAAAlD,UAAAI,OAAP,WACE,OACEE,EAAA,cAAC2C,EAAgBlD,EAAA,KAAKD,KAAKF,SAGjCsD,EAfA,CAAqB5C,EAAA","file":"static/js/4.36c21daf.chunk.js","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport SidebarComponent from '../../layouts/Sidebar';\nimport { Segment, Card, Image } from 'semantic-ui-react';\nimport MixListHoc from '@music/hocs/mix/ListHoc';\nimport { IState, IGenre } from '@music/interfaces';\nimport { SizeMe } from 'react-sizeme';\nimport { genreModel } from '@music/models';\nimport gaService from '@music/_services/gaService';\n\nclass GenreList extends React.Component<any, any> {\n\n  constructor(props: any) {\n    super(props);\n  }\n\n  public componentDidMount() {\n    gaService.pageView(`Genre List`);\n  }\n\n  public render() {\n    return (\n      <>\n      <SizeMe>\n        {({ size }) => (\n          <SidebarComponent>\n            <Segment style={{height: 'auto'}} className=\"toptracks-container\">\n            <Card.Group>\n              {this.props.genres.filter((g: IGenre) => g.list).map((genre: IGenre) => (\n                <Card fluid={!((size.width || 0) > 603)} centered={!((size.width || 0) > 603)} key={genre.id} link>\n                  <Image onClick={this.go(genre)} src={genre.image} />\n                  <Card.Content onClick={this.go(genre)}>\n                    <Card.Header>{genre.name}</Card.Header>\n                    <Card.Description>{genre.name}</Card.Description>\n                  </Card.Content>\n                </Card>\n              ))}\n            </Card.Group>\n            </Segment>\n          </SidebarComponent>\n        )}\n      </SizeMe>\n      </>\n    );\n  }\n\n  private go(genre: IGenre): () => any {\n    return () => {\n      this.props.history.push(genreModel.newInstance(genre).url());\n    }\n  }\n}\n\nconst mapStateToProps = (state: IState) => {\n  return {\n    genres: state.genres.data\n  }\n};\n\nconst GenreListPage = connect(mapStateToProps)(withRouter(GenreList));\n\nexport default MixListHoc(GenreListPage);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/genre/ListPage.tsx","import * as React from 'react';\n\nexport default function MixListHoc(WrappedComponent: any) {\n  return class extends React.Component<any, any> {\n    constructor(props: any) {\n      super(props);\n      this.state = {};\n    }\n\n    public async componentDidMount() {\n\n    }\n\n    public render() {\n      return (\n        <WrappedComponent {...this.props} />\n      );\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/mix/ListHoc.tsx"],"sourceRoot":""}