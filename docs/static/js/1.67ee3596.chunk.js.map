{"version":3,"sources":["pages/series/ListPage.tsx","hocs/series/ListHoc.tsx","components/stateless/PlayButtonVariants/ButtonVariant3.tsx"],"names":["SeriesList","_super","props","_this","call","this","state","__WEBPACK_IMPORTED_MODULE_0_tslib__","Object","defineProperty","prototype","container","componentDidMount","setState","artists","reduce","result","artist","id","__WEBPACK_IMPORTED_MODULE_13__music_services_gaService__","pageView","render","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_12_react_sizeme__","_a","size","__WEBPACK_IMPORTED_MODULE_4__layouts_Sidebar__","__WEBPACK_IMPORTED_MODULE_5_semantic_ui_react__","style","height","className","as","Group","series","map","s","fluid","width","centered","key","link","onClick","go","src","__WEBPACK_IMPORTED_MODULE_7__music_config__","slug","Content","Header","name","Meta","__WEBPACK_IMPORTED_MODULE_9__music_utils__","artistId","Description","about","extra","mix","__WEBPACK_IMPORTED_MODULE_14__music_components_stateless_PlayButtonVariants_ButtonVariant3__","service","__WEBPACK_IMPORTED_MODULE_15__music_services_container__","get","findMix","count","where","seriesId","first","history","push","__WEBPACK_IMPORTED_MODULE_8__music_models__","newInstance","url","SeriesListPage","__WEBPACK_IMPORTED_MODULE_2_react_redux__","data","__WEBPACK_IMPORTED_MODULE_16__music_extensions_entity_collection__","mixContainer","dispatch","setMainMix","__WEBPACK_IMPORTED_MODULE_10__music_actions_player__","prepareMix","addToContainer","cb","__WEBPACK_IMPORTED_MODULE_11__music_actions_mix__","addGenresIfNotExists","__WEBPACK_IMPORTED_MODULE_3_react_router_dom__","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_6__music_hocs_series_ListHoc__","WrappedComponent","class_1","__WEBPACK_IMPORTED_MODULE_0_react__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_1_semantic_ui_react__","n","__WEBPACK_IMPORTED_MODULE_2__music_hocs_ActionButtonHoc__","action","isPlaying","isLoading","circular","loading","icon"],"mappings":"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","file":"static/js/1.67ee3596.chunk.js","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport SidebarComponent from '../../layouts/Sidebar';\nimport { Segment, Card, Image, Header } from 'semantic-ui-react';\nimport SeriesListHoc from '@music/hocs/series/ListHoc';\nimport config from '@music/config';\nimport { seriesModel } from '@music/models';\nimport { get } from '@music/utils';\nimport { setMainMix } from '@music/actions/player';\nimport { prepareMix, addGenresIfNotExists } from '@music/actions/mix';\nimport { SizeMe } from 'react-sizeme';\nimport gaService from '@music/_services/gaService';\nimport { IArtist, IKeyValueObject, IMix, IState, ISeries, IRouteProps, MainMixType } from '@music/interfaces';\nimport PlayButtonVariant3 from '@music/components/stateless/PlayButtonVariants/ButtonVariant3';\nimport container from '@music/_services/container';\nimport EntityCollection from '@music/extensions/entity-collection';\n\ninterface ISeriesListProps extends IRouteProps {\n  series: ISeries[];\n  artists: IArtist[];\n  container: EntityCollection;\n}\n\nclass SeriesList extends React.Component<ISeriesListProps, IKeyValueObject> {\n\n  constructor(props: ISeriesListProps) {\n    super(props);\n    this.state = {};\n  }\n\n  private get container(): EntityCollection {\n    return this.props.container;\n  }\n\n  public componentDidMount() {\n    this.setState((state: IKeyValueObject) => {\n        const artists = this.props.artists.reduce((result: any, artist: any) => {\n          result[artist.id] = artist;\n          return result;\n        }, {})\n        return {...state, artists};\n      }, () => gaService.pageView(`Series List`)\n    )\n  }\n\n  public render() {\n    const { artists } = this.state;\n    return !artists ? null : (\n      <>\n      <SizeMe>\n        {({ size }) => (\n        <SidebarComponent>\n          <Segment style={{height: 'auto'}} className=\"toptracks-container\">\n            <Header as='h1'>Series</Header>\n            <Card.Group>\n            {this.props.series.map(s => (\n              <Card fluid={!((size.width || 0) > 603)} centered={!((size.width || 0) > 603)} key={s.id} link>\n                <Image onClick={this.go(s)} src={config(`images.${s.slug}.300x300`)} />\n                <Card.Content onClick={this.go(s)}>\n                  <Card.Header>{s.name}</Card.Header>\n                  <Card.Meta>\n                    by <strong className='date'>{get(`${s.artistId}.name`, artists)}</strong>\n                  </Card.Meta>\n                  <Card.Description>{s.about}</Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  {((mix: IMix|undefined) => {\n                    return (\n                      <>\n                      {mix &&\n                        <PlayButtonVariant3\n                          {...this.props}\n                          mix={{\n                            ...mix,\n                            series: s\n                          }}\n                          service={container.get('mainPlayer')}\n                        />\n                      }\n                      </>\n                    )\n                  })(this.findMix(s))}\n                  {' '}\n                  <strong>\n                    {s.name} #{s.count}\n                  </strong>\n                </Card.Content>\n              </Card>\n            ))}\n            </Card.Group>\n          </Segment>\n        </SidebarComponent>\n        )}\n        </SizeMe>\n      </>\n    );\n  }\n\n  private findMix(series: ISeries): IMix|undefined {\n    const mix = this.container.where({\n      seriesId: series.id,\n      count: series.count\n    }).first();\n    return mix ? {...mix, series} : mix;\n  }\n\n  private go(series: ISeries): () => any {\n    return () => {\n      this.props.history.push(seriesModel.newInstance(series).url());\n    }\n  }\n}\n\nconst mapDispatchToProps = (dispatch: CallableFunction) => {\n  return {\n    setMainMix: (mix: MainMixType) => dispatch(setMainMix({...mix})),\n    prepareMix: (mix: IMix, addToContainer: boolean, cb: (mix: IMix) => any) => dispatch(prepareMix(mix, addToContainer, cb)),\n    addGenresIfNotExists: (mix: IMix,) => dispatch(addGenresIfNotExists(mix))\n  }\n};\n\nconst mapStateToProps = (state: IState) => {\n  return {\n    series: state.series.data,\n    artists: state.artists.data,\n    container: new EntityCollection(state.mixContainer.data)\n  }\n};\n\nconst SeriesListPage = connect(mapStateToProps, mapDispatchToProps)(withRouter(SeriesList as any));\n\nexport default SeriesListHoc(SeriesListPage);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/series/ListPage.tsx","import * as React from 'react';\n\nexport default function SeriesListHoc(WrappedComponent: any) {\n  return class extends React.Component<any, any> {\n    constructor(props: any) {\n      super(props);\n      this.state = {};\n    }\n\n    public async componentDidMount() {\n\n    }\n\n    public render() {\n      return (\n        <WrappedComponent />\n      );\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/series/ListHoc.tsx","import * as React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport ActionButtonHoc from '@music/hocs/ActionButtonHoc';\nimport { IMix } from '@music/interfaces';\nimport { IButtonVariant } from '@music/components/stateless/PlayButtonVariants/ButtonVariant1';\n\nfunction ButtonVariant3({ action, isPlaying, isLoading, mix = {} as IMix }: IButtonVariant) {\n  return (\n    <>\n      <Button\n        circular\n        size=\"mini\"\n        onClick={() => action()}\n        loading={!isPlaying && isLoading}\n        icon={(isPlaying ? 'pause' : 'play')}\n      />\n    </>\n  );\n}\n\nexport default ActionButtonHoc(ButtonVariant3);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/stateless/PlayButtonVariants/ButtonVariant3.tsx"],"sourceRoot":""}